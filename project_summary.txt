Academic Planner Web Application - Project Summary

1. Project Overview:
This is a web application for managing academic tasks with user registration, login, and task CRUD operations. Users can add, view, update, prioritize, complete, and delete their tasks.

2. Technologies and Libraries Used:
- Python 3
- Flask: Web framework for backend development
- Flask-SQLAlchemy: ORM for database integration with SQLite
- Flask-Login: User session management and authentication
- Werkzeug: Password hashing utilities
- SQLite: Lightweight relational database for storing user and task data
- HTML5, CSS3: Markup and styling for frontend
- Bootstrap 5: CSS framework for responsive and modern UI design
- FontAwesome: Icon library for UI icons
- JavaScript: Frontend logic for task management interactions

3. Project Structure:
- app.py: Main Flask application with routes, models, and API endpoints
- requirements.txt: Python dependencies for the project
- templates/: HTML templates for pages
  - index.html: Main task manager page
  - login.html: User login page
  - register.html: User registration page
- static/: Static assets
  - styles.css: Custom CSS styles
  - script.js: JavaScript for frontend task management

4. Features:
- User registration and login with secure password hashing
- User session management with login required for task operations
- Task CRUD operations with priority and completion status
- Tasks stored in SQLite database associated with users
- Responsive UI with Bootstrap styling and FontAwesome icons

5. How to Run:
- Install dependencies: pip install -r requirements.txt
- Run the app: python app.py
- Access the app at http://127.0.0.1:5000

This summary can be used to explain the project components and technologies to your teacher.
